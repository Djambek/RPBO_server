version: '3.8'

services:
  flight-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: flight-booking-app
    ports:
      - "8080:8080"
    environment:
      - SPRING_APPLICATION_NAME=flight-booking-app
    networks:
      - monitoring-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  prometheus:
    image: prom/prometheus:v2.35.0
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.enable-lifecycle'
      - '--storage.tsdb.retention.time=200h'
    networks:
      - monitoring-network
    restart: unless-stopped

  grafana:
    image: grafana/grafana:9.5.2  # Фиксируем версию вместо latest
    container_name: grafana
    ports:
      - "9000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=localpass
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning  # Раскомментировал для автоматической настройки
    networks:
      - monitoring-network
    restart: unless-stopped
    depends_on:
      - prometheus

volumes:
  prometheus_data:
  grafana_data:

networks:
  monitoring-network:
    driver: bridge